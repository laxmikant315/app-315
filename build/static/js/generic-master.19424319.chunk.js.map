{"version":3,"sources":["pages/generic-master-new/context/context-gm.tsx","pages/generic-master-new/context/service-gm.tsx","pages/generic-master-new/components/HeaderGm.tsx","pages/generic-master-new/components/FooterGm.tsx","pages/generic-master-new/components/MidGm.tsx","pages/generic-master-new/context/reducer-gm.tsx","pages/generic-master-new/components/CreateEditGm.tsx","pages/generic-master-new/components/GenericMaster.tsx"],"names":["GmContext","React","createContext","model","details","visibleModify","apiUrl","config","getByCode","code","axios","get","then","x","data","catch","console","log","HeaderGm","Form","create","name","props","_props$form","form","getFieldDecorator","setFieldsValue","getFieldInstance","_useContext","useContext","state","dispatch","getItem","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","e","res","rest","wrap","_context","prev","next","currentTarget","value","sent","objectWithoutProperties","type","header","description","status","items","message","info","stop","_x","apply","this","arguments","useEffect","focus","react_default","createElement","es_form","layout","style","padding","Item","label","rules","required","input","autoFocus","onBlur","onPressEnter","blur","placeholder","onInput","objectSpread","initialValue","es_radio","Group","onChange","target","es_button","onClick","icon","FooterGm","handleCancel","_useState","useState","_useState2","slicedToArray","loadingSave","setLoadingSave","row","className","disabled","loading","headerForm","current","validateFields","err","values","pkg","length","warn","id","patch","post","success","error","toString","finally","react_router_dom","to","Content","Layout","MidGm","edit","item","index","columns","title","dataIndex","sorter","width","filters","text","key","render","tooltip","placement","flag","size","overflow","table","rowKey","record","dataSource","filter","scroll","y","pagination","onRow","onDoubleClick","GmReducer","action","concat","toConsumableArray","splice","reset","editItem","editIndex","updateItem","CreateEditGm","resetFields","_state$model$editItem","modal","visible","transitionName","okText","onCancel","onOk","preventDefault","find","GenericMaster","_useReducer","useReducer","_useReducer2","useRef","Provider","ref","MidGm_MidGm","FooterGm_FooterGm"],"mappings":"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","file":"static/js/generic-master.19424319.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GmContext: React.Context<any> = React.createContext({\r\n  model: { details: [] },\r\n  visibleModify: true\r\n});\r\n\r\nexport { GmContext as default };\r\n","import config from '../../../config.json';\r\nimport axios from 'axios';\r\nconst apiUrl = config.apiUrl + 'generic-master/';\r\n\r\nconst getByCode = (code: string) => {\r\n  return axios\r\n    .get(apiUrl + code)\r\n    .then(x => x.data)\r\n    .catch(x => {\r\n      console.log(x);\r\n    });\r\n};\r\nconst save = (pkg: any) => {\r\n  if (pkg.id) {\r\n    return axios.patch(apiUrl + pkg.id, pkg);\r\n  } else {\r\n    return axios.post(apiUrl + '', pkg);\r\n  }\r\n};\r\n\r\nexport { getByCode, save };\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Form, Input, Button, Icon, Radio, message } from 'antd';\r\nimport { ModifyGM } from '../../generic-master/components/ModifyGM';\r\nimport GmContext from '../context/context-gm';\r\nimport { getByCode } from '../context/service-gm';\r\nconst showModal = (item?: any) => {};\r\n\r\nconst Comp: React.FC = (props: any) => {\r\n  const { getFieldDecorator, setFieldsValue, getFieldInstance } = props.form;\r\n  const { state, dispatch } = useContext(GmContext);\r\n\r\n  const getItem = async (e: any) => {\r\n    const code = e.currentTarget.value;\r\n    if (code && code !== state.model.code) {\r\n      const res = await getByCode(code);\r\n\r\n      if (res) {\r\n        const { details, ...rest } = res;\r\n\r\n        dispatch({\r\n          type: 'SET_HEADER',\r\n          header: rest\r\n        });\r\n\r\n        setFieldsValue({\r\n          description: rest.description,\r\n          status: rest.status\r\n        });\r\n\r\n        dispatch({\r\n          type: 'SET_ITEMS',\r\n          items: details\r\n        });\r\n      } else {\r\n        message.info('Record Not found. You can create new one.');\r\n        dispatch({\r\n          type: 'RESET'\r\n        });\r\n        dispatch({\r\n          type: 'SET_HEADER',\r\n          header: { code, status: 'ACTIVE' }\r\n        });\r\n\r\n        setFieldsValue({\r\n          code\r\n        });\r\n      }\r\n\r\n      console.log(res);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!state.model.code) {\r\n      setFieldsValue({ code: '', description: '', status: 'ACTIVE' });\r\n      getFieldInstance('code').focus();\r\n    }\r\n  }, [state.model.code]);\r\n  return (\r\n    <div>\r\n      <Form layout=\"inline\" style={{ padding: '5px 10px' }}>\r\n        <Form.Item label=\"Group\">\r\n          {getFieldDecorator('code', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please enter Code'\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              autoFocus\r\n              onBlur={getItem}\r\n              onPressEnter={() => {\r\n                getFieldInstance('code').blur();\r\n              }}\r\n              placeholder=\"Code\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('description', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please enter Description'\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"textarea\"\r\n              placeholder=\"Description\"\r\n              onInput={value => {\r\n                dispatch({\r\n                  type: 'SET_HEADER',\r\n                  header: {\r\n                    ...state.model.header,\r\n                    description: value.currentTarget.value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('status', {\r\n            initialValue: 'ACTIVE'\r\n          })(\r\n            <Radio.Group\r\n              onChange={value => {\r\n                dispatch({\r\n                  type: 'SET_HEADER',\r\n                  header: {\r\n                    ...state.model.header,\r\n                    status: value.target.value\r\n                  }\r\n                });\r\n              }}\r\n            >\r\n              <Radio value=\"ACTIVE\">Active</Radio>\r\n              <Radio value=\"INACTIVE\">In-active</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"ghost\"\r\n            onClick={() => {\r\n              dispatch({ type: 'TOGGLE_MODIFY' });\r\n            }}\r\n          >\r\n            <Icon type=\"plus\" />\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HeaderGm = Form.create<any>({ name: 'horizontal_login' })(Comp);\r\n\r\nexport { HeaderGm as default };\r\n","import React, { useContext, useState } from 'react';\r\nimport { Button, Row, message } from 'antd';\r\nimport GmContext from '../context/context-gm';\r\nimport { save } from '../context/service-gm';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst FooterGm: React.FC<{ headerForm: any }> = (props: any) => {\r\n  const { state, dispatch } = useContext(GmContext);\r\n\r\n  const handleCancel = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n  return (\r\n    <Row className='bg-white py-1'>\r\n      <Button\r\n        disabled={!state.model.code}\r\n        type=\"primary\"\r\n        loading={loadingSave}\r\n        onClick={async e => {\r\n          if (state.model.code) {\r\n            console.log(props);\r\n\r\n            props.headerForm.current.validateFields((err: any, values: any) => {\r\n              const details = state.model.details;\r\n\r\n              if (!err) {\r\n                if (!(details && details.length > 0)) {\r\n                  message.warn('Please add atleast one record.');\r\n                  return;\r\n                }\r\n                setLoadingSave(true);\r\n                save(state.model)\r\n                  .then((res: any) => {\r\n                    message.success('Record saved successfully.');\r\n                    handleCancel();\r\n                  })\r\n                  .catch((res: any) => {\r\n                    message.error(res.toString());\r\n                  })\r\n                  .finally(() => {\r\n                    setLoadingSave(false);\r\n                  });\r\n              }\r\n            });\r\n          }\r\n          // message.success('Record saved.');\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n\r\n      <Button\r\n        type=\"ghost\"\r\n        onClick={() => {\r\n          handleCancel();\r\n        }}\r\n        disabled={!state.model.code}\r\n      >\r\n        Cancel\r\n      </Button>\r\n      <Button type=\"ghost\" disabled={!state.model.code}>\r\n        Print\r\n      </Button>\r\n      <Link  to=\"/\">\r\n        <Button type=\"danger\">Exit</Button>\r\n      </Link>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport { FooterGm as default };\r\n","import React, { useContext } from 'react';\r\nimport { Layout, Table, Tooltip, Button, Icon } from 'antd';\r\nimport GmContext from '../context/context-gm';\r\nconst { Content } = Layout;\r\nconst MidGm: React.FC = () => {\r\n  const { state, dispatch } = useContext(GmContext);\r\n\r\n  const edit = (item: any, index: number) => {\r\n    dispatch({ type: 'EDIT_ITEM', item, index });\r\n    dispatch({ type: 'TOGGLE_MODIFY', item, index });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Code',\r\n      dataIndex: 'code',\r\n      sorter: true,\r\n      width: '20%'\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      sorter: true\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      filters: [\r\n        { text: 'Active', value: 'active' },\r\n        { text: 'In-active', value: 'inactive' }\r\n      ],\r\n      width: '20%'\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text: any, item: any, index: number) => (\r\n        <Tooltip title=\"Delete\" placement=\"right\">\r\n          <Button\r\n            onClick={() => {\r\n              if (!item.id) {\r\n                dispatch({ type: 'REMOVE_ITEM', index });\r\n              } else {\r\n                dispatch({\r\n                  type: 'UPDATE_ITEM',\r\n                  index,\r\n                  item: { ...item, flag: 'D' }\r\n                });\r\n              }\r\n            }}\r\n            size=\"small\"\r\n            type=\"danger\"\r\n          >\r\n            <Icon type=\"close\" /> Delete\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              return edit(item, index);\r\n            }}\r\n            size=\"small\"\r\n            type=\"default\"\r\n          >\r\n            <Icon type=\"edit\" /> Edit\r\n          </Button>\r\n        </Tooltip>\r\n      ),\r\n      width: '15%'\r\n    }\r\n  ];\r\n  return (\r\n    <Content style={{ overflow: 'auto' }}>\r\n      {state.model.details && (\r\n        <Table\r\n          columns={columns}\r\n          size=\"small\"\r\n          rowKey={(record: any) => record.code}\r\n          dataSource={state.model.details.filter((x: any) => x.flag !== 'D')}\r\n          // pagination={this.state.pagination}\r\n          scroll={{ y: 'calc(100vh - 225px)' }}\r\n          pagination={false}\r\n          // loading={this.state.loading}\r\n          // onChange={this.handleTableChange}\r\n\r\n          onRow={(item, index) => {\r\n            return {\r\n              onDoubleClick: () => {\r\n                return edit(item, index);\r\n              } // click row\r\n            };\r\n          }}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport { MidGm as default };\r\n","import { StateGm } from './state-gm';\r\n\r\nconst GmReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case 'SET_ITEMS':\r\n      return {\r\n        ...state,\r\n        model: {\r\n          ...state.model,\r\n          details: action.items\r\n        }\r\n      };\r\n    case 'SET_HEADER':\r\n      return {\r\n        ...state,\r\n        model: {\r\n          ...state.model,\r\n          ...action.header\r\n        }\r\n      };\r\n    case 'ADD_ITEM':\r\n      return {\r\n        ...state,\r\n        model: {\r\n          ...state.model,\r\n          details: [...state.model.details, action.item]\r\n        }\r\n      };\r\n    case 'REMOVE_ITEM': {\r\n      let details: any[] = state.model.details;\r\n\r\n      details.splice(action.index, 1);\r\n      console.log(details);\r\n      return {\r\n        ...state,\r\n        model: {\r\n          ...state.model,\r\n          details\r\n        }\r\n      };\r\n    }\r\n    case 'RESET': {\r\n      return {\r\n        ...state,\r\n        model: { details: [] },\r\n        reset: true\r\n      };\r\n    }\r\n    case 'RESET_DONE': {\r\n      return {\r\n        ...state,\r\n        reset: false\r\n      };\r\n    }\r\n    case 'EDIT_ITEM': {\r\n      return {\r\n        ...state,\r\n        model: {\r\n          ...state.model,\r\n          editItem: action.item,\r\n          editIndex: action.index\r\n        }\r\n      };\r\n    }\r\n    case 'TOGGLE_MODIFY':\r\n      return {\r\n        ...state,\r\n        visibleModify: !state.visibleModify\r\n      };\r\n\r\n    case 'UPDATE_ITEM': {\r\n      let details: any[] = state.model.details;\r\n\r\n      let updateItem = state.model.details[action.index];\r\n      updateItem = { ...updateItem, ...action.item };\r\n\r\n      // const updatedData = state.model.details.filter(\r\n      //   (x: any) => x.id !== action.id\r\n      // );\r\n\r\n      details[action.index] = updateItem;\r\n      return {\r\n        ...state,\r\n        model: { ...state.model, details, editItem: null, editIndex: null }\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { GmReducer as default };\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Layout, Modal, Form, Input, Radio, message } from 'antd';\r\nimport GmContext from '../context/context-gm';\r\nimport { FormWrappedProps } from 'antd/lib/form/interface';\r\nimport { FormComponentProps, FormItemProps, FormProps } from 'antd/lib/form';\r\n\r\nconst { Content } = Layout;\r\nconst CreateEditCoreGm: React.FC<{\r\n  form: any;\r\n  item?: any;\r\n}> = props => {\r\n  let { item } = props;\r\n  let { form } = props;\r\n\r\n  const {\r\n    getFieldDecorator,\r\n    setFieldsValue,\r\n    validateFields,\r\n    resetFields\r\n  } = form;\r\n\r\n  if (!item) {\r\n    item = {};\r\n  }\r\n\r\n  const { dispatch, state } = useContext(GmContext);\r\n\r\n  useEffect(() => {\r\n    if (form.getFieldInstance('code')) {\r\n      form.getFieldInstance('code').focus();\r\n    }\r\n  }, [state]);\r\n\r\n  useEffect(() => {\r\n    if (state.model.editItem) {\r\n      const { code, description, status } = state.model.editItem;\r\n      setFieldsValue({\r\n        code,\r\n        description,\r\n        status\r\n      });\r\n\r\n      //  alert(state.model.editItem);\r\n    }\r\n    if (form.getFieldInstance('code')) {\r\n      form.getFieldInstance('code').focus();\r\n    }\r\n  }, [state.model.editItem]);\r\n\r\n  return (\r\n    <Modal\r\n      visible={state.visibleModify}\r\n      width={300}\r\n      transitionName=\"zoom\"\r\n      title={state.model.editItem ? 'Edit' : 'Add New'}\r\n      okText=\"Create\"\r\n      onCancel={() => {\r\n        dispatch({ type: 'TOGGLE_MODIFY' });\r\n      }}\r\n      onOk={(e: any) => {\r\n        e.preventDefault();\r\n        validateFields((err: any, item: any) => {\r\n          if (err) {\r\n            return;\r\n          }\r\n\r\n        \r\n          if (!state.model.editItem) {\r\n            const exits = state.model.details.find((x: any) => x.code === item.code);\r\n\r\n            if (exits) {\r\n              message.warn('Code is already exists.');\r\n              return;\r\n            }\r\n            dispatch({ type: 'ADD_ITEM', item });\r\n          } else {\r\n            dispatch({\r\n              type: 'UPDATE_ITEM',\r\n              item,\r\n              index: state.model.editIndex\r\n            });\r\n          }\r\n          resetFields();\r\n          dispatch({ type: 'TOGGLE_MODIFY' });\r\n        });\r\n      }}\r\n    >\r\n      <Form layout=\"vertical\">\r\n        <Form.Item label=\"Code\">\r\n          {getFieldDecorator('code', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please enter Code'\r\n              }\r\n            ]\r\n          })(<Input autoFocus />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Description\">\r\n          {getFieldDecorator('description', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please enter Description'\r\n              }\r\n            ]\r\n          })(<Input type=\"textarea\" />)}\r\n        </Form.Item>\r\n        <Form.Item className=\"collection-create-form_last-form-item\">\r\n          {getFieldDecorator('status', {\r\n            initialValue: 'ACTIVE'\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"ACTIVE\">Active</Radio>\r\n              <Radio value=\"INACTIVE\">In-active</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst CreateEditGm = Form.create<any>({ name: 'horizontal_login' })(\r\n  CreateEditCoreGm\r\n);\r\n\r\nexport { CreateEditGm as default };\r\n","import React, { useReducer, useEffect, useRef } from 'react';\r\nimport GmContext from '../context/context-gm';\r\nimport HeaderGm from './HeaderGm';\r\nimport FooterGm from './FooterGm';\r\nimport MidGm from './MidGm';\r\nimport MainLayout from '../../../layout/Layout';\r\nimport { Layout } from 'antd';\r\nimport GmReducer from '../context/reducer-gm';\r\nimport { ModifyGM } from '../../generic-master/components/ModifyGM';\r\nimport { stat } from 'fs';\r\nimport CreateEditGm from './CreateEditGm';\r\n\r\nconst GenericMaster: React.FC = (props: any) => {\r\n  const [state, dispatch] = useReducer(GmReducer, {\r\n    model: { details: [] }\r\n  });\r\n  const headerForm: any = useRef(null);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <GmContext.Provider value={{ state, dispatch }}>\r\n        <Layout className=\"h-full\">\r\n          <HeaderGm ref={headerForm} />\r\n\r\n          <MidGm />\r\n\r\n          <FooterGm headerForm={headerForm} />\r\n          <CreateEditGm />\r\n        </Layout>\r\n      </GmContext.Provider>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport { GenericMaster as default };\r\n"],"sourceRoot":""}